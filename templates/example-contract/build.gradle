buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'foundation.icon:gradle-javaee-plugin:0.7.9'
        
    }
}

subprojects {
    group 'com.iconloop.score.example.{{project_name_camel}}'
    version '0.1'

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'foundation.icon.javaee'

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    dependencies {
        classpath 'foundation.icon:gradle-javaee-plugin:0.7.9'
        compileOnly 'foundation.icon:javaee-api:0.9.1'

        testImplementation 'foundation.icon:javaee-unittest:0.9.2'
        testImplementation 'org.mockito:mockito-inline:4.0.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
        testImplementation 'foundation.icon:icon-sdk:2.0.0'
        testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

        implementation 'com.github.sink772:javaee-tokens:0.6.3'
        implementation 'foundation.icon:javaee-scorex:0.5.3'
    }

    // need to add this option to retrieve formal parameter names
    compileJava {
        options.compilerArgs += ['-parameters']
    }

    
optimizedJar {
    mainClassName = 'io.contractdeployer.generics.irc3.IRC3'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        berlin {
            uri = 'https://berlin.net.solidwallet.io/api/v3'
            nid = 0x7
        }
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''

   parameters {
        arg('name', 'Alice')
    }
}


test {
    useJUnitPlatform()
}
}
